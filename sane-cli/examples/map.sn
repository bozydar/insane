let map = fun fn =>
    let map_ = fun list =>
        if app (app list to count), 0 to eq then
        if eq $ 0 $ (count $ list)   then
            []
        else
            let h = app (
                app head list
            ) to fn in
            let t = app list to tail in
            app [h], (app t to map_) to concat

            {fun a -> a + 1) a, b
    in map_
in
    app [1; 2; 3; "dupa"; 5] to app (fun a => app a to inc) to map
    [1; 2; 3; "dupa"; 5] |> (map fun a => app a to inc)


Check if for app we can just check in pest that left side is ident or fun