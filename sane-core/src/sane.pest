newline    = _{ "\n" | "\r\n" }
WHITESPACE = _{ " " | "\t" | newline }
block_comment = _{ "/*" ~ (block_comment | !"*/" ~ ANY)* ~ "*/" }
COMMENT    = _{ block_comment | ("//" ~ (!newline ~ ANY)*) }

number = @{
    "-"?
    ~ ("0" | ASCII_NONZERO_DIGIT ~ ASCII_DIGIT*)
    ~ ("." ~ ASCII_DIGIT*)?
    ~ (^"e" ~ ("+" | "-")? ~ ASCII_DIGIT+)?
}

string_quoted = _{ "\"" ~ string ~ "\"" }
string = @{ char* }
char = _{
    !("\"" | "\\") ~ ANY
    | "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
    | "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
}

ident = @{ (ASCII_ALPHA | "_" ) ~ (ASCII_ALPHANUMERIC | "_" )*  }

let_in = { "let" ~ ident_expr ~ ("and" ~ "let" ~ ident_expr)*  ~ "in" ~ expr }
ident_expr = { ident ~ "=" ~ expr }
fun = { "fun" ~ args ~ "=>" ~ expr }
args = { ident+ }
bind = { term ~ "(" ~ expr+ ~ ")" }

infix = { term ~ (operator ~ term)+ }
operator = _{ op_left_pipe | op_right_pipe | op_dollar }
op_left_pipe = { "|>" }
op_right_pipe = { "<|" }
op_dollar = { "$" }

list = { "[" ~ expr? ~ (";" ~ expr)* ~ "]" }
structure = { "{" ~ field_value? ~ (";" ~ field_value)* ~ "}" }
field_value = { ident ~ ":" ~ expr }
if_then_else = { "if" ~ expr ~ "then" ~ expr ~ "else" ~ expr }

expr = _{ infix | let_in | fun | bind | if_then_else |  term }
term = _{  "(" ~ expr ~ ")" | structure | list | ident | constant }
constant = { number | string_quoted }
file = { SOI ~ expr ~ EOI }
